import requests
import json

question_slugs = ['best-time-to-buy-and-sell-stock-iv', 'sort-colors', 'encode-and-decode-strings', 'alien-dictionary', 'minimum-number-of-operations-to-make-array-empty', 'edit-distance', 'differences-between-two-objects', 'repeated-string-match', 'serialize-and-deserialize-binary-tree', 'word-ladder', 'image-smoother', 'construct-binary-tree-from-preorder-and-inorder-traversal', 'check-if-move-is-legal', 'number-of-pairs-of-interchangeable-rectangles', 'validate-stack-sequences', 'arithmetic-slices-ii-subsequence', 'rotate-list', 'minimum-number-of-arrows-to-burst-balloons', 'sum-of-all-subset-xor-totals', '132-pattern', 'stone-game-ii', 'leaf-similar-trees', 'surrounded-regions', 'monotonic-array', 'partition-array-into-two-arrays-to-minimize-sum-difference', 'seat-reservation-manager', 'online-stock-span', 'matchsticks-to-square', 'multiply-strings', 'sleep', 'first-missing-positive', 'palindromic-substrings', 'check-if-there-is-a-valid-partition-for-the-array', 'remove-max-number-of-edges-to-keep-graph-fully-traversable', 'sum-of-subarray-ranges', 'minimum-number-of-days-to-eat-n-oranges', 'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree', 'merge-sorted-array', 'solving-questions-with-brainpower', 'longest-palindromic-subsequence', 'search-a-2d-matrix-ii', 'score-after-flipping-matrix', 'flip-equivalent-binary-trees', 'out-of-boundary-paths', 'number-of-substrings-containing-all-three-characters', 'champagne-tower', 'find-the-town-judge', 'kth-largest-element-in-an-array', 'longest-common-subsequence', 'range-sum-query-immutable', 'valid-perfect-square', 'minimum-add-to-make-parentheses-valid', 'middle-of-the-linked-list', 'word-search', 'house-robber-iii', 'minimize-the-maximum-difference-of-pairs', 'find-all-numbers-disappeared-in-an-array', 'swim-in-rising-water', 'symmetric-tree', 'maximum-product-difference-between-two-pairs', 'path-with-minimum-effort', 'maximum-product-of-the-length-of-two-palindromic-subsequences', 'remove-covered-intervals', 'text-justification', 'count-good-numbers', 'range-sum-of-bst', 'design-a-food-rating-system', 'extra-characters-in-a-string', 'minimum-distance-between-bst-nodes', 'counting-bits', 'number-of-closed-islands', 'is-graph-bipartite', 'find-the-difference-of-two-arrays', 'reverse-pairs', 'plus-one', 'find-peak-element', 'find-a-peak-element-ii', 'count-vowels-permutation', 'maximum-depth-of-binary-tree', 'minimum-window-substring', 'number-of-distinct-islands-ii', 'delete-leaves-with-a-given-value', 'best-time-to-buy-and-sell-stock-with-transaction-fee', 'unique-binary-search-trees-ii', 'design-hashset', 'task-scheduler', 'delete-and-earn', 'asteroid-collision', 'find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance', 'path-sum', 'time-needed-to-inform-all-employees', 'check-if-object-instance-of-class', 'maximum-score-words-formed-by-letters', 'combination-sum-iii', 'count-sub-islands', 'maximum-nesting-depth-of-the-parentheses', 'frequency-of-the-most-frequent-element', 'path-with-maximum-gold', 'distribute-coins-in-binary-tree', 'evaluate-division', 'number-of-students-unable-to-eat-lunch', 'minimum-number-of-days-to-make-m-bouquets', 'boats-to-save-people', 'furthest-building-you-can-reach', 'largest-substring-between-two-equal-characters', 'sort-characters-by-frequency', 'construct-binary-tree-from-inorder-and-postorder-traversal', 'count-subarrays-where-max-element-appears-at-least-k-times', 'sum-of-subarray-minimums', 'reverse-linked-list', 'pseudo-palindromic-paths-in-a-binary-tree', 'path-crossing', 'make-the-string-great', 'reverse-words-in-a-string', 'minimum-height-trees', 'assign-cookies', 'maximum-length-of-pair-chain', 'find-the-index-of-the-first-occurrence-in-a-string', 'find-unique-binary-string', 'minimum-difference-between-highest-and-lowest-of-k-scores', 'graph-valid-tree', 'majority-element', 'minimum-cost-to-cut-a-stick', 'find-all-anagrams-in-a-string', 'freedom-trail', 'special-array-with-x-elements-greater-than-or-equal-x', 'convert-sorted-array-to-binary-search-tree', 'recover-binary-search-tree', 'making-a-large-island', 'best-team-with-no-conflicts', 'non-decreasing-array', 'maximum-xor-with-an-element-from-array', 'triangle', 'minimum-insertion-steps-to-make-a-string-palindrome', 'palindrome-number', 'restore-ip-addresses', 'redistribute-characters-to-make-all-strings-equal', 'balanced-binary-tree', 'two-sum-ii-input-array-is-sorted', 'minimum-interval-to-include-each-query', 'number-of-1-bits', 'number-of-ways-to-rearrange-sticks-with-k-sticks-visible', 'number-of-good-pairs', 'intersection-of-two-linked-lists', 'vertical-order-traversal-of-a-binary-tree', 'lowest-common-ancestor-of-a-binary-tree', 'longest-substring-with-at-most-k-distinct-characters', 'wildcard-matching', 'isomorphic-strings', 'walls-and-gates', 'find-pivot-index', 'find-the-smallest-divisor-given-a-threshold', 'count-and-say', 'climbing-stairs', 'single-number-iii', 'jump-game-ii', 'merge-intervals', 'arranging-coins', 'best-time-to-buy-and-sell-stock-ii', 'number-of-ways-to-stay-in-the-same-place-after-some-steps', 'convert-bst-to-greater-tree', 'group-anagrams', 'delete-the-middle-node-of-a-linked-list', 'squares-of-a-sorted-array', 'copy-list-with-random-pointer', 'word-break-ii', 'clone-graph', 'reverse-linked-list-ii', 'split-array-largest-sum', 'boundary-of-binary-tree', 'maximum-points-you-can-obtain-from-cards', 'optimal-partition-of-string', 'remove-outermost-parentheses', 'remove-all-adjacent-duplicates-in-string-ii', 'meeting-rooms', 'replace-elements-with-greatest-element-on-right-side', 'fruit-into-baskets', 'minimum-one-bit-operations-to-make-integers-zero', 'rearrange-array-elements-by-sign', 'design-linked-list', 'invert-binary-tree', 'min-stack', 'minimize-maximum-of-array', 'populating-next-right-pointers-in-each-node', 'bitwise-and-of-numbers-range', 'maximum-product-subarray', 'single-element-in-a-sorted-array', 'valid-parentheses', 'maximum-score-of-a-good-subarray', 'distinct-subsequences', 'least-number-of-unique-integers-after-k-removals', 'binary-tree-maximum-path-sum', 'maximum-twin-sum-of-a-linked-list', 'check-if-two-string-arrays-are-equivalent', 'minimum-remove-to-make-valid-parentheses', 'n-queens', 'path-with-maximum-probability', 'array-reduce-transformation', 'flip-string-to-monotone-increasing', 'kth-missing-positive-number', 'maximum-alternating-subsequence-sum', 'redundant-connection', 'integer-break', 'minimize-max-distance-to-gas-station', 'verifying-an-alien-dictionary', 'next-greater-element-i', 'number-of-ways-to-arrive-at-destination', 'brick-wall', 'reorder-list', 'longest-substring-without-repeating-characters', 'maximum-number-of-vowels-in-a-substring-of-given-length', 'time-based-key-value-store', 'sliding-window-maximum', 'largest-submatrix-with-rearrangements', 'design-twitter', 'last-stone-weight', 'car-fleet', 'reverse-bits', 'reverse-integer', 'word-pattern', 'widest-vertical-area-between-two-points-containing-no-points', 'largest-divisible-subset', 'reorder-routes-to-make-all-paths-lead-to-the-city-zero', 'decode-ways', 'dota2-senate', 'koko-eating-bananas', 'best-time-to-buy-and-sell-stock-with-cooldown', 'construct-string-from-binary-tree', 'divide-array-into-arrays-with-max-difference', 'interleaving-string', 'flatten-binary-tree-to-linked-list', 'non-overlapping-intervals', 'binary-tree-zigzag-level-order-traversal', 'event-emitter', 'stone-game-iii', 'binary-search', 'jump-game-vii', 'convert-object-to-json-string', 'sum-root-to-leaf-numbers', 'json-deep-equal', 'reconstruct-itinerary', 'merge-two-binary-trees', 'rotting-oranges', 'greatest-common-divisor-traversal', 'count-triplets-that-can-form-two-arrays-of-equal-xor', '4sum', 'length-of-last-word', 'find-the-longest-valid-obstacle-course-at-each-position', 'reveal-cards-in-increasing-order', 'same-tree', 'convert-an-array-into-a-2d-array-with-conditions', 'parsing-a-boolean-expression', 'find-in-mountain-array', 'n-queens-ii', 'group-by', 'shortest-palindrome', 'binary-tree-inorder-traversal', 'new-21-game', 'check-completeness-of-a-binary-tree', 'maximum-performance-of-a-team', 'palindrome-linked-list', 'rotate-array', 'house-robber', 'maximum-length-of-a-concatenated-string-with-unique-characters', 'maximum-number-of-removable-characters', 'sum-of-absolute-differences-in-a-sorted-array', 'unique-binary-search-trees', 'number-of-islands', 'unique-paths', 'implement-stack-using-queues', 'nested-array-generator', 'minimum-window-subsequence', 'promise-time-limit', 'powx-n', 'lowest-common-ancestor-of-a-binary-search-tree', 'find-eventual-safe-states', 'coin-change-ii', 'k-th-symbol-in-grammar', 'delete-node-in-a-bst', 'minimum-operations-to-reduce-x-to-zero', 'profitable-schemes', 'maximum-score-after-splitting-a-string', 'binary-tree-preorder-traversal', 'accounts-merge', 'remove-linked-list-elements', 'transpose-matrix', 'continuous-subarray-sum', 'encode-and-decode-tinyurl', 'unique-paths-ii', 'maximum-sum-circular-subarray', 'merge-two-sorted-lists', 'construct-quad-tree', 'remove-colored-pieces-if-both-neighbors-are-the-same-color', 'insert-interval', 'maximum-width-of-binary-tree', 'majority-element-ii', 'daily-temperatures', 'number-of-subsequences-that-satisfy-the-given-sum-condition', 'search-a-2d-matrix', 'armstrong-number', 'maximum-subarray-min-product', 'number-of-enclaves', 'word-search-ii', 'remove-nodes-from-linked-list', 'number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold', 'minimum-score-of-a-path-between-two-cities', 'concatenation-of-array', 'number-of-good-paths', 'number-of-longest-increasing-subsequence', 'subsets', 'find-all-duplicates-in-an-array', 'rotate-string', 'pacific-atlantic-water-flow', 'missing-number', 'smallest-string-starting-from-leaf', 'subarray-product-less-than-k', 'valid-sudoku', 'subtree-of-another-tree', 'ones-and-zeroes', 'jump-game', 'all-possible-full-binary-trees', 'binary-search-tree-iterator', 'integer-to-roman', 'grid-game', 'count-number-of-nice-subarrays', 'subarrays-with-k-different-integers', 'largest-number', 'merge-strings-alternately', 'maximal-square', 'validate-binary-search-tree', 'min-cost-to-connect-all-points', 'curry', 'removing-stars-from-a-string', 'inorder-successor-in-bst', 'ipo', 'promise-pool', 'evaluate-reverse-polish-notation', 'two-sum', 'maximum-subsequence-score', 'minimum-cost-to-hire-k-workers', 'binary-tree-level-order-traversal', 'number-of-islands-ii', 'array-of-objects-to-matrix', 'valid-anagram', 'implement-queue-using-stacks', 'maximum-element-after-decreasing-and-rearranging', 'longest-string-chain', 'course-schedule-ii', 'count-ways-to-build-good-strings', 'maximize-score-after-n-operations', 'create-hello-world-function', 'reverse-string', 'count-all-valid-pickup-and-delivery-options', 'spiral-matrix', 'merge-triplets-to-form-target-triplet', 'function-composition', 'hand-of-straights', 'greatest-common-divisor-of-strings', 'expression-add-operators', 'insert-into-a-binary-search-tree', 'number-of-dice-rolls-with-target-sum', 'merge-k-sorted-lists', 'painting-the-walls', 'linked-list-cycle-ii', 'time-needed-to-buy-tickets', 'minimum-bit-flips-to-convert-number', 'length-of-longest-subarray-with-at-most-k-frequency', 'largest-odd-number-in-string', 'string-compression-ii', 'data-stream-as-disjoint-intervals', 'number-of-operations-to-make-network-connected', '01-matrix', 'push-dominoes', 'island-perimeter', 'student-attendance-record-ii', 'trim-a-binary-search-tree', 'eliminate-maximum-number-of-monsters', 'design-add-and-search-words-data-structure', 'top-k-frequent-elements', 'min-cost-climbing-stairs', 'binary-subarrays-with-sum', 'set-matrix-zeroes', 'partition-equal-subset-sum', 'can-place-flowers', 'rotate-image', 'remove-element', 'sudoku-solver', 'generate-parentheses', 'longest-turbulent-subarray', 'gas-station', 'unique-length-3-palindromic-subsequences', 'is-subsequence', 'letter-combinations-of-a-phone-number', 'string-to-integer-atoi', 'find-median-from-data-stream', 'meeting-rooms-iii', 'container-with-most-water', 'maximum-xor-of-two-numbers-in-an-array', 'snakes-and-ladders', 'minimum-deletions-to-make-character-frequencies-unique', 'move-zeroes', 'number-of-laser-beams-in-a-bank', 'repeated-dna-sequences', 'remove-duplicates-from-sorted-array-ii', 'intersection-of-two-arrays', 'cherry-pickup-ii', 'cheapest-flights-within-k-stops', 'course-schedule-iv', 'longest-increasing-path-in-a-matrix', 'as-far-from-land-as-possible', 'word-ladder-ii', 'insert-delete-getrandom-o1', 'insertion-sort-list', 'even-odd-tree', 'contains-duplicate-ii', 'power-of-two', 'combinations', 'target-sum', 'minimum-cost-for-tickets', 'process-tasks-using-servers', 'design-parking-system', 'combination-sum-ii', 'array-prototype-last', 'number-of-ways-to-divide-a-long-corridor', 'unique-email-addresses', 'find-largest-value-in-each-tree-row', 'search-insert-position', 'sort-array-by-parity', 'partition-array-for-maximum-sum', 'search-suggestions-system', 'set-mismatch', 'maximum-frequency-stack', 'pascals-triangle', 'shortest-path-with-alternating-colors', 'longest-consecutive-sequence', 'longest-palindromic-substring', 'perfect-squares', 'word-break', 'find-polygon-with-the-largest-perimeter', 'combination-sum-iv', 'longest-happy-string', 'add-to-array-form-of-integer', 'destination-city', 'minimum-number-of-swaps-to-make-the-string-balanced', 'roman-to-integer', 'contains-duplicate', 'sum-of-beauty-of-all-substrings', 'flood-fill', 'maximum-odd-binary-number', 'network-delay-time', 'flatten-nested-list-iterator', 'generate-fibonacci-sequence', 'maximum-value-of-k-coins-from-piles', 'concatenated-words', 'minimum-difficulty-of-a-job-schedule', 'operations-on-tree', 'naming-a-company', 'lemonade-change', 'swapping-nodes-in-a-linked-list', 'single-threaded-cpu', 'minimum-fuel-cost-to-report-to-the-capital', 'knight-dialer', 'construct-binary-search-tree-from-preorder-traversal', 'call-function-with-custom-context', 'debounce', 'divide-two-integers', 'backspace-string-compare', 'k-closest-points-to-origin', 'find-bottom-left-tree-value', 'search-in-a-binary-search-tree', 'sum-of-two-integers', 'split-linked-list-in-parts', 'valid-palindrome-ii', 'maximum-subarray', 'simplify-path', 'memoize', 'guess-number-higher-or-lower', 'sign-of-the-product-of-an-array', 'parallel-courses-iii', 'count-odd-numbers-in-an-interval-range', 'throttle', 'all-nodes-distance-k-in-binary-tree', 'max-points-on-a-line', 'two-sum-iv-input-is-a-bst', 'valid-parenthesis-string', 'longest-increasing-subsequence', 'sort-list', 'minimum-falling-path-sum-ii', 'permutation-sequence', 'validate-binary-tree-nodes', 'array-with-elements-not-equal-to-average-of-neighbors', 'max-consecutive-ones-iii', 'shuffle-the-array', 'compare-version-numbers', 'largest-color-value-in-a-directed-graph', 'binary-tree-right-side-view', 'number-of-submatrices-that-sum-to-target', 'best-time-to-buy-and-sell-stock-iii', 'palindrome-partitioning-ii', 'median-of-two-sorted-arrays', 'max-consecutive-ones', 'ugly-number', 'wiggle-sort', 'number-of-flowers-in-full-bloom', 'number-of-music-playlists', 'check-if-array-is-sorted-and-rotated', 'find-the-maximum-sum-of-node-values', 'minimum-length-of-string-after-deleting-similar-ends', 'last-stone-weight-ii', 'design-hashmap', 'swap-nodes-in-pairs', 'count-primes', 'the-number-of-beautiful-subsets', 'partition-list', 'n-th-tribonacci-number', 'array-wrapper', 'excel-sheet-column-title', 'next-greater-element-ii', 'next-permutation', 'maximum-profit-in-job-scheduling', 'longest-happy-prefix', 'candy', 'find-first-palindromic-string-in-the-array', 'sort-an-array', 'reorganize-string', 'binary-tree-postorder-traversal', 'find-k-closest-elements', 'remove-k-digits', 'search-in-rotated-sorted-array', 'permutations', 'maximum-number-of-non-overlapping-substrings', 'critical-connections-in-a-network', 'diameter-of-binary-tree', 'coin-change', 'minimum-number-of-flips-to-make-the-binary-string-alternating', 'find-minimum-in-rotated-sorted-array', 'range-sum-query-2d-immutable', 'longest-repeating-character-replacement', 'count-good-nodes-in-binary-tree', 'minimum-penalty-for-a-shop', 'chunk-array', '3sum', 'kth-smallest-element-in-a-bst', 'reverse-words-in-a-string-iii', 'find-the-safest-path-in-a-grid', 'product-of-array-except-self', 'largest-3-same-digit-number-in-string', 'spiral-matrix-ii', 'trapping-rain-water', 'minimum-changes-to-make-alternating-binary-string', 'valid-palindrome', 'car-pooling', 'find-the-duplicate-number', 'capacity-to-ship-packages-within-d-days', 'kth-largest-element-in-a-stream', 'design-browser-history', 'shortest-path-in-binary-matrix', 'longest-ideal-subsequence', 'allow-one-function-call', 'maximum-sum-bst-in-binary-tree', 'remove-nth-node-from-end-of-list', 'largest-rectangle-in-histogram', 'buy-two-chocolates', 'apply-transform-over-each-element-in-array', 'cache-with-time-limit', 'permutations-ii', 'subarray-sum-equals-k', 'max-area-of-island', 'minimum-time-to-make-rope-colorful', 'check-if-a-string-contains-all-binary-codes-of-size-k', 'combination-sum', 'implement-trie-prefix-tree', 'matrix-diagonal-sum', 'robot-bounded-in-circle', 'delete-node-in-a-linked-list', 'number-of-provinces', 'shift-2d-grid', 'best-time-to-buy-and-sell-stock', 'design-underground-system', 'search-in-rotated-sorted-array-ii', 'delete-operation-for-two-strings', 'paint-house', 'first-unique-character-in-a-string', 'merge-in-between-linked-lists', 'subsets-ii', 'happy-number', 'burst-balloons', 'implement-strstr', 'longest-common-prefix', 'remove-duplicates-from-sorted-array', 'linked-list-cycle', 'bag-of-tokens', 'flatten-deeply-nested-array', 'course-schedule', 'decode-string', 'sqrtx', 'open-the-lock', 'calculate-money-in-leetcode-bank', 'shortest-bridge', 'lru-cache', 'minimum-path-sum', 'find-missing-observations', 'lfu-cache', 'find-closest-node-to-given-two-nodes', 'find-the-difference', 'stone-game', 'counter-ii', 'get-equal-substrings-within-budget', 'add-two-numbers', 'add-binary', 'find-first-and-last-position-of-element-in-sorted-array', 'partition-labels', 'fibonacci-number', 'regular-expression-matching', 'count-complete-tree-nodes', 'uncrossed-lines', 'find-the-kth-largest-integer-in-the-array', 'power-of-four', 'counter', 'number-of-zero-filled-subarrays', 'minimize-deviation-in-array', 'minimum-number-of-operations-to-make-array-continuous', 'two-city-scheduling', 'number-of-ways-to-form-a-target-string-given-a-dictionary', 'remove-duplicates-from-sorted-list', 'most-stones-removed-with-same-row-or-column', 'design-circular-queue', 'successful-pairs-of-spells-and-potions', 'minimum-time-to-collect-all-apples-in-a-tree', 'maximum-number-of-balloons', 'shortest-common-supersequence', 'detonate-the-maximum-bombs', 'permutation-in-string', 'contiguous-array', 'minimum-size-subarray-sum', 'detect-squares', 'zigzag-conversion', 'largest-local-values-in-a-matrix', 'minimum-falling-path-sum', 'odd-even-linked-list', 'palindrome-partitioning', 'stickers-to-spell-word', 'maximal-rectangle', 'find-all-people-with-secret', 'filter-elements-from-array', 'constrained-subsequence-sum', 'coin-change-2', 'find-duplicate-subtrees', 'count-square-submatrices-with-all-ones', 'find-words-that-can-be-formed-by-characters', 'partition-to-k-equal-sum-subsets', 'count-of-matches-in-tournament', 'evaluate-boolean-binary-tree', 'k-inverse-pairs-array', 'pascals-triangle-ii', 'house-robber-ii', 'minimum-number-of-vertices-to-reach-all-nodes', 'sequential-digits', 'single-number', 'number-of-connected-components-in-an-undirected-graph', 'reverse-nodes-in-k-group', 'meeting-rooms-ii', 'splitting-a-string-into-descending-consecutive-values', 'baseball-game']


# Define the GraphQL endpoint
graphql_url = 'https://leetcode.com/graphql'

# Define the GraphQL query template
query_template = '''
query {
  question(titleSlug: "%s") {
    acRate
    difficulty
    freqBar
    questionFrontendId
    isFavor
    isPaidOnly
    status
    title
    titleSlug
    topicTags {
      name
      id
      slug
    }
    hasSolution
    hasVideoSolution
  }
}
'''

# Function to fetch data for a single slug
def fetch_data(slug):
    query = query_template % slug
    response = requests.post(graphql_url, json={'query': query})
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception(f"Query failed with status code {response.status_code}")

# Main processing
def main():
    results = {}
    for slug in question_slugs:
        try:
            data = fetch_data(slug)
            results[slug] = json.dumps(data, indent=2)  # Stringify JSON response with indentation
        except Exception as e:
            print(f"Error fetching data for slug '{slug}': {e}")

    # Save results to a JSON file
    with open('question_data.json', 'w') as file:
        json.dump(results, file, indent=2)

if __name__ == '__main__':
    main()