import { QuestionBank } from "../types/questions.js";

export const questions: QuestionBank = {
    "neetcodeAll": [
      "contains-duplicate",
      "valid-anagram",
      "concatenation-of-array",
      "replace-elements-with-greatest-element-on-right-side",
      "is-subsequence",
      "length-of-last-word",
      "two-sum",
      "longest-common-prefix",
      "group-anagrams",
      "pascals-triangle",
      "remove-element",
      "unique-email-addresses",
      "isomorphic-strings",
      "can-place-flowers",
      "majority-element",
      "next-greater-element-i",
      "find-pivot-index",
      "range-sum-query-immutable",
      "find-all-numbers-disappeared-in-an-array",
      "maximum-number-of-balloons",
      "word-pattern",
      "design-hashset",
      "design-hashmap",
      "monotonic-array",
      "number-of-good-pairs",
      "pascals-triangle-ii",
      "find-words-that-can-be-formed-by-characters",
      "largest-3-same-digit-number-in-string",
      "destination-city",
      "maximum-product-difference-between-two-pairs",
      "maximum-score-after-splitting-a-string",
      "path-crossing",
      "minimum-changes-to-make-alternating-binary-string",
      "redistribute-characters-to-make-all-strings-equal",
      "largest-substring-between-two-equal-characters",
      "set-mismatch",
      "first-unique-character-in-a-string",
      "intersection-of-two-arrays",
      "number-of-students-unable-to-eat-lunch",
      "time-needed-to-buy-tickets",
      "special-array-with-x-elements-greater-than-or-equal-x",
      "sort-an-array",
      "top-k-frequent-elements",
      "encode-and-decode-strings",
      "product-of-array-except-self",
      "valid-sudoku",
      "longest-consecutive-sequence",
      "sort-colors",
      "encode-and-decode-tinyurl",
      "brick-wall",
      "best-time-to-buy-and-sell-stock-ii",
      "subarray-sum-equals-k",
      "unique-length-3-palindromic-subsequences",
      "minimum-number-of-swaps-to-make-the-string-balanced",
      "number-of-pairs-of-interchangeable-rectangles",
      "maximum-product-of-the-length-of-two-palindromic-subsequences",
      "grid-game",
      "find-all-anagrams-in-a-string",
      "find-the-index-of-the-first-occurrence-in-a-string",
      "wiggle-sort",
      "largest-number",
      "continuous-subarray-sum",
      "push-dominoes",
      "repeated-dna-sequences",
      "insert-delete-getrandom-o1",
      "check-if-a-string-contains-all-binary-codes-of-size-k",
      "range-sum-query-2d-immutable",
      "non-decreasing-array",
      "first-missing-positive",
      "sign-of-the-product-of-an-array",
      "find-the-difference-of-two-arrays",
      "design-parking-system",
      "number-of-zero-filled-subarrays",
      "optimal-partition-of-string",
      "design-underground-system",
      "minimum-penalty-for-a-shop",
      "champagne-tower",
      "majority-element-ii",
      "sum-of-absolute-differences-in-a-sorted-array",
      "design-a-food-rating-system",
      "convert-an-array-into-a-2d-array-with-conditions",
      "minimum-number-of-operations-to-make-array-empty",
      "divide-array-into-arrays-with-max-difference",
      "sequential-digits",
      "sort-characters-by-frequency",
      "find-polygon-with-the-largest-perimeter",
      "minimum-remove-to-make-valid-parentheses",
      "contiguous-array",
      "find-all-duplicates-in-an-array",
      "text-justification",
      "naming-a-company",
      "number-of-submatrices-that-sum-to-target",
      "valid-palindrome",
      "valid-palindrome-ii",
      "minimum-difference-between-highest-and-lowest-of-k-scores",
      "merge-strings-alternately",
      "reverse-string",
      "merge-sorted-array",
      "move-zeroes",
      "remove-duplicates-from-sorted-array",
      "assign-cookies",
      "find-first-palindromic-string-in-the-array",
      "sort-array-by-parity",
      "reverse-words-in-a-string-iii",
      "backspace-string-compare",
      "check-if-two-string-arrays-are-equivalent",
      "remove-duplicates-from-sorted-array-ii",
      "two-sum-ii-input-array-is-sorted",
      "3sum",
      "4sum",
      "container-with-most-water",
      "number-of-subsequences-that-satisfy-the-given-sum-condition",
      "rotate-array",
      "array-with-elements-not-equal-to-average-of-neighbors",
      "boats-to-save-people",
      "k-th-symbol-in-grammar",
      "minimum-time-to-make-rope-colorful",
      "rearrange-array-elements-by-sign",
      "bag-of-tokens",
      "minimum-length-of-string-after-deleting-similar-ends",
      "trapping-rain-water",
      "best-time-to-buy-and-sell-stock",
      "contains-duplicate-ii",
      "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
      "longest-substring-without-repeating-characters",
      "longest-repeating-character-replacement",
      "permutation-in-string",
      "frequency-of-the-most-frequent-element",
      "fruit-into-baskets",
      "maximum-number-of-vowels-in-a-substring-of-given-length",
      "minimum-number-of-flips-to-make-the-binary-string-alternating",
      "minimum-size-subarray-sum",
      "find-k-closest-elements",
      "minimum-operations-to-reduce-x-to-zero",
      "get-equal-substrings-within-budget",
      "binary-subarrays-with-sum",
      "subarray-product-less-than-k",
      "length-of-longest-subarray-with-at-most-k-frequency",
      "count-subarrays-where-max-element-appears-at-least-k-times",
      "minimum-window-substring",
      "sliding-window-maximum",
      "subarrays-with-k-different-integers",
      "minimum-number-of-operations-to-make-array-continuous",
      "valid-parentheses",
      "baseball-game",
      "implement-stack-using-queues",
      "implement-queue-using-stacks",
      "make-the-string-great",
      "min-stack",
      "evaluate-reverse-polish-notation",
      "removing-stars-from-a-string",
      "validate-stack-sequences",
      "generate-parentheses",
      "asteroid-collision",
      "daily-temperatures",
      "online-stock-span",
      "car-fleet",
      "simplify-path",
      "decode-string",
      "remove-k-digits",
      "remove-all-adjacent-duplicates-in-string-ii",
      "132-pattern",
      "flatten-nested-list-iterator",
      "sum-of-subarray-minimums",
      "maximum-frequency-stack",
      "largest-rectangle-in-histogram",
      "binary-search",
      "search-insert-position",
      "guess-number-higher-or-lower",
      "arranging-coins",
      "squares-of-a-sorted-array",
      "valid-perfect-square",
      "sqrtx",
      "single-element-in-a-sorted-array",
      "capacity-to-ship-packages-within-d-days",
      "find-peak-element",
      "successful-pairs-of-spells-and-potions",
      "search-a-2d-matrix",
      "koko-eating-bananas",
      "minimize-the-maximum-difference-of-pairs",
      "find-minimum-in-rotated-sorted-array",
      "search-in-rotated-sorted-array",
      "search-in-rotated-sorted-array-ii",
      "time-based-key-value-store",
      "find-first-and-last-position-of-element-in-sorted-array",
      "maximum-number-of-removable-characters",
      "populating-next-right-pointers-in-each-node",
      "search-suggestions-system",
      "split-array-largest-sum",
      "median-of-two-sorted-arrays",
      "find-in-mountain-array",
      "reverse-linked-list",
      "merge-two-sorted-lists",
      "palindrome-linked-list",
      "remove-linked-list-elements",
      "remove-duplicates-from-sorted-list",
      "middle-of-the-linked-list",
      "intersection-of-two-linked-lists",
      "merge-in-between-linked-lists",
      "remove-nodes-from-linked-list",
      "reorder-list",
      "maximum-twin-sum-of-a-linked-list",
      "remove-nth-node-from-end-of-list",
      "swapping-nodes-in-a-linked-list",
      "lfu-cache",
      "copy-list-with-random-pointer",
      "design-linked-list",
      "design-browser-history",
      "add-two-numbers",
      "linked-list-cycle",
      "find-the-duplicate-number",
      "swap-nodes-in-pairs",
      "sort-list",
      "partition-list",
      "rotate-list",
      "reverse-linked-list-ii",
      "design-circular-queue",
      "insertion-sort-list",
      "split-linked-list-in-parts",
      "lru-cache",
      "merge-k-sorted-lists",
      "reverse-nodes-in-k-group",
      "binary-tree-inorder-traversal",
      "binary-tree-preorder-traversal",
      "binary-tree-postorder-traversal",
      "invert-binary-tree",
      "maximum-depth-of-binary-tree",
      "diameter-of-binary-tree",
      "balanced-binary-tree",
      "same-tree",
      "subtree-of-another-tree",
      "convert-sorted-array-to-binary-search-tree",
      "merge-two-binary-trees",
      "path-sum",
      "range-sum-of-bst",
      "leaf-similar-trees",
      "evaluate-boolean-binary-tree",
      "construct-string-from-binary-tree",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "insert-into-a-binary-search-tree",
      "delete-node-in-a-bst",
      "binary-tree-level-order-traversal",
      "binary-tree-right-side-view",
      "minimum-distance-between-bst-nodes",
      "symmetric-tree",
      "minimum-time-to-collect-all-apples-in-a-tree",
      "binary-tree-zigzag-level-order-traversal",
      "construct-quad-tree",
      "find-duplicate-subtrees",
      "check-completeness-of-a-binary-tree",
      "construct-binary-tree-from-inorder-and-postorder-traversal",
      "maximum-width-of-binary-tree",
      "time-needed-to-inform-all-employees",
      "count-good-nodes-in-binary-tree",
      "validate-binary-search-tree",
      "kth-smallest-element-in-a-bst",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "unique-binary-search-trees",
      "unique-binary-search-trees-ii",
      "sum-root-to-leaf-numbers",
      "house-robber-iii",
      "flip-equivalent-binary-trees",
      "operations-on-tree",
      "all-possible-full-binary-trees",
      "find-bottom-left-tree-value",
      "trim-a-binary-search-tree",
      "binary-search-tree-iterator",
      "validate-binary-tree-nodes",
      "find-largest-value-in-each-tree-row",
      "pseudo-palindromic-paths-in-a-binary-tree",
      "even-odd-tree",
      "smallest-string-starting-from-leaf",
      "delete-leaves-with-a-given-value",
      "distribute-coins-in-binary-tree",
      "convert-bst-to-greater-tree",
      "binary-tree-maximum-path-sum",
      "serialize-and-deserialize-binary-tree",
      "kth-largest-element-in-a-stream",
      "last-stone-weight",
      "k-closest-points-to-origin",
      "kth-largest-element-in-an-array",
      "task-scheduler",
      "design-twitter",
      "least-number-of-unique-integers-after-k-removals",
      "furthest-building-you-can-reach",
      "minimize-deviation-in-array",
      "maximum-subsequence-score",
      "single-threaded-cpu",
      "seat-reservation-manager",
      "process-tasks-using-servers",
      "find-the-kth-largest-integer-in-the-array",
      "reorganize-string",
      "longest-happy-string",
      "car-pooling",
      "find-median-from-data-stream",
      "maximum-performance-of-a-team",
      "ipo",
      "minimum-cost-to-hire-k-workers",
      "number-of-flowers-in-full-bloom",
      "constrained-subsequence-sum",
      "sum-of-all-subset-xor-totals",
      "subsets",
      "combination-sum",
      "combinations",
      "permutations",
      "subsets-ii",
      "combination-sum-ii",
      "permutations-ii",
      "word-search",
      "palindrome-partitioning",
      "restore-ip-addresses",
      "letter-combinations-of-a-phone-number",
      "matchsticks-to-square",
      "splitting-a-string-into-descending-consecutive-values",
      "find-unique-binary-string",
      "maximum-length-of-a-concatenated-string-with-unique-characters",
      "partition-to-k-equal-sum-subsets",
      "the-number-of-beautiful-subsets",
      "n-queens",
      "n-queens-ii",
      "maximum-score-words-formed-by-letters",
      "word-break-ii",
      "implement-trie-prefix-tree",
      "design-add-and-search-words-data-structure",
      "extra-characters-in-a-string",
      "word-search-ii",
      "island-perimeter",
      "verifying-an-alien-dictionary",
      "find-the-town-judge",
      "number-of-islands",
      "max-area-of-island",
      "clone-graph",
      "walls-and-gates",
      "rotting-oranges",
      "count-sub-islands",
      "pacific-atlantic-water-flow",
      "surrounded-regions",
      "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
      "snakes-and-ladders",
      "open-the-lock",
      "find-eventual-safe-states",
      "course-schedule",
      "course-schedule-ii",
      "graph-valid-tree",
      "course-schedule-iv",
      "check-if-move-is-legal",
      "shortest-bridge",
      "shortest-path-in-binary-matrix",
      "number-of-connected-components-in-an-undirected-graph",
      "redundant-connection",
      "accounts-merge",
      "find-closest-node-to-given-two-nodes",
      "as-far-from-land-as-possible",
      "shortest-path-with-alternating-colors",
      "minimum-fuel-cost-to-report-to-the-capital",
      "minimum-score-of-a-path-between-two-cities",
      "number-of-closed-islands",
      "number-of-enclaves",
      "minimum-number-of-vertices-to-reach-all-nodes",
      "is-graph-bipartite",
      "evaluate-division",
      "detonate-the-maximum-bombs",
      "minimum-height-trees",
      "path-with-maximum-gold",
      "largest-color-value-in-a-directed-graph",
      "minimum-number-of-days-to-eat-n-oranges",
      "parallel-courses-iii",
      "find-all-people-with-secret",
      "word-ladder",
      "path-with-minimum-effort",
      "reconstruct-itinerary",
      "min-cost-to-connect-all-points",
      "network-delay-time",
      "path-with-maximum-probability",
      "find-the-safest-path-in-a-grid",
      "swim-in-rising-water",
      "alien-dictionary",
      "cheapest-flights-within-k-stops",
      "number-of-good-paths",
      "remove-max-number-of-edges-to-keep-graph-fully-traversable",
      "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
      "greatest-common-divisor-traversal",
      "climbing-stairs",
      "min-cost-climbing-stairs",
      "house-robber",
      "house-robber-ii",
      "longest-palindromic-substring",
      "palindromic-substrings",
      "decode-ways",
      "coin-change",
      "maximum-product-subarray",
      "word-break",
      "longest-increasing-subsequence",
      "partition-equal-subset-sum",
      "triangle",
      "delete-and-earn",
      "paint-house",
      "combination-sum-iv",
      "perfect-squares",
      "check-if-there-is-a-valid-partition-for-the-array",
      "maximum-subarray-min-product",
      "minimum-cost-for-tickets",
      "integer-break",
      "number-of-longest-increasing-subsequence",
      "stickers-to-spell-word",
      "n-th-tribonacci-number",
      "uncrossed-lines",
      "solving-questions-with-brainpower",
      "count-ways-to-build-good-strings",
      "new-21-game",
      "best-team-with-no-conflicts",
      "longest-string-chain",
      "knight-dialer",
      "partition-array-for-maximum-sum",
      "largest-divisible-subset",
      "stone-game-iii",
      "concatenated-words",
      "maximize-score-after-n-operations",
      "find-the-longest-valid-obstacle-course-at-each-position",
      "count-all-valid-pickup-and-delivery-options",
      "number-of-ways-to-divide-a-long-corridor",
      "maximum-profit-in-job-scheduling",
      "student-attendance-record-ii",
      "unique-paths",
      "unique-paths-ii",
      "longest-common-subsequence",
      "longest-palindromic-subsequence",
      "last-stone-weight-ii",
      "best-time-to-buy-and-sell-stock-with-cooldown",
      "coin-change-ii",
      "target-sum",
      "interleaving-string",
      "stone-game",
      "minimum-path-sum",
      "longest-increasing-path-in-a-matrix",
      "maximal-square",
      "ones-and-zeroes",
      "maximum-alternating-subsequence-sum",
      "distinct-subsequences",
      "edit-distance",
      "number-of-dice-rolls-with-target-sum",
      "minimum-falling-path-sum",
      "out-of-boundary-paths",
      "longest-ideal-subsequence",
      "count-vowels-permutation",
      "burst-balloons",
      "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
      "regular-expression-matching",
      "stone-game-ii",
      "flip-string-to-monotone-increasing",
      "maximum-value-of-k-coins-from-piles",
      "number-of-music-playlists",
      "number-of-ways-to-form-a-target-string-given-a-dictionary",
      "profitable-schemes",
      "minimum-cost-to-cut-a-stick",
      "painting-the-walls",
      "number-of-ways-to-stay-in-the-same-place-after-some-steps",
      "string-compression-ii",
      "minimum-difficulty-of-a-job-schedule",
      "arithmetic-slices-ii-subsequence",
      "k-inverse-pairs-array",
      "cherry-pickup-ii",
      "minimum-falling-path-sum-ii",
      "freedom-trail",
      "buy-two-chocolates",
      "maximum-odd-binary-number",
      "maximum-nesting-depth-of-the-parentheses",
      "maximum-subarray",
      "maximum-sum-circular-subarray",
      "longest-turbulent-subarray",
      "jump-game",
      "jump-game-ii",
      "jump-game-vii",
      "gas-station",
      "hand-of-straights",
      "minimize-maximum-of-array",
      "dota2-senate",
      "maximum-points-you-can-obtain-from-cards",
      "merge-triplets-to-form-target-triplet",
      "partition-labels",
      "valid-parenthesis-string",
      "eliminate-maximum-number-of-monsters",
      "two-city-scheduling",
      "maximum-length-of-pair-chain",
      "minimum-deletions-to-make-character-frequencies-unique",
      "candy",
      "remove-colored-pieces-if-both-neighbors-are-the-same-color",
      "maximum-element-after-decreasing-and-rearranging",
      "number-of-laser-beams-in-a-bank",
      "reveal-cards-in-increasing-order",
      "score-after-flipping-matrix",
      "maximum-score-of-a-good-subarray",
      "find-the-maximum-sum-of-node-values",
      "insert-interval",
      "merge-intervals",
      "non-overlapping-intervals",
      "meeting-rooms",
      "meeting-rooms-ii",
      "remove-covered-intervals",
      "minimum-number-of-arrows-to-burst-balloons",
      "minimum-interval-to-include-each-query",
      "data-stream-as-disjoint-intervals",
      "meeting-rooms-iii",
      "excel-sheet-column-title",
      "greatest-common-divisor-of-strings",
      "count-odd-numbers-in-an-interval-range",
      "matrix-diagonal-sum",
      "calculate-money-in-leetcode-bank",
      "largest-odd-number-in-string",
      "transpose-matrix",
      "image-smoother",
      "count-of-matches-in-tournament",
      "largest-local-values-in-a-matrix",
      "power-of-four",
      "max-points-on-a-line",
      "rotate-image",
      "spiral-matrix",
      "spiral-matrix-ii",
      "set-matrix-zeroes",
      "happy-number",
      "plus-one",
      "palindrome-number",
      "ugly-number",
      "shift-2d-grid",
      "roman-to-integer",
      "integer-to-roman",
      "powx-n",
      "multiply-strings",
      "detect-squares",
      "robot-bounded-in-circle",
      "zigzag-conversion",
      "find-missing-observations",
      "largest-submatrix-with-rearrangements",
      "widest-vertical-area-between-two-points-containing-no-points",
      "minimum-one-bit-operations-to-make-integers-zero",
      "single-number",
      "single-number-iii",
      "number-of-1-bits",
      "counting-bits",
      "reverse-bits",
      "missing-number",
      "shuffle-the-array",
      "add-to-array-form-of-integer",
      "find-the-difference",
      "power-of-two",
      "sum-of-two-integers",
      "reverse-integer",
      "bitwise-and-of-numbers-range",
      "count-triplets-that-can-form-two-arrays-of-equal-xor",
      "add-binary",
      "create-hello-world-function",
      "counter",
      "counter-ii",
      "apply-transform-over-each-element-in-array",
      "filter-elements-from-array",
      "array-reduce-transformation",
      "function-composition",
      "allow-one-function-call",
      "memoize",
      "curry",
      "sleep",
      "promise-time-limit",
      "promise-pool",
      "cache-with-time-limit",
      "debounce",
      "throttle",
      "json-deep-equal",
      "convert-object-to-json-string",
      "array-of-objects-to-matrix",
      "differences-between-two-objects",
      "chunk-array",
      "flatten-deeply-nested-array",
      "array-prototype-last",
      "group-by",
      "check-if-object-instance-of-class",
      "call-function-with-custom-context",
      "event-emitter",
      "array-wrapper",
      "generate-fibonacci-sequence",
      "nested-array-generator",
    ],
    "neetcode150": [
      "contains-duplicate",
      "valid-anagram",
      "two-sum",
      "group-anagrams",
      "top-k-frequent-elements",
      "encode-and-decode-strings",
      "product-of-array-except-self",
      "valid-sudoku",
      "longest-consecutive-sequence",
      "valid-palindrome",
      "two-sum-ii-input-array-is-sorted",
      "3sum",
      "container-with-most-water",
      "trapping-rain-water",
      "best-time-to-buy-and-sell-stock",
      "longest-substring-without-repeating-characters",
      "longest-repeating-character-replacement",
      "permutation-in-string",
      "minimum-window-substring",
      "sliding-window-maximum",
      "valid-parentheses",
      "min-stack",
      "evaluate-reverse-polish-notation",
      "generate-parentheses",
      "daily-temperatures",
      "car-fleet",
      "largest-rectangle-in-histogram",
      "binary-search",
      "search-a-2d-matrix",
      "koko-eating-bananas",
      "find-minimum-in-rotated-sorted-array",
      "search-in-rotated-sorted-array",
      "time-based-key-value-store",
      "median-of-two-sorted-arrays",
      "reverse-linked-list",
      "merge-two-sorted-lists",
      "reorder-list",
      "remove-nth-node-from-end-of-list",
      "copy-list-with-random-pointer",
      "add-two-numbers",
      "linked-list-cycle",
      "find-the-duplicate-number",
      "lru-cache",
      "merge-k-sorted-lists",
      "reverse-nodes-in-k-group",
      "invert-binary-tree",
      "maximum-depth-of-binary-tree",
      "diameter-of-binary-tree",
      "balanced-binary-tree",
      "same-tree",
      "subtree-of-another-tree",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "binary-tree-level-order-traversal",
      "binary-tree-right-side-view",
      "count-good-nodes-in-binary-tree",
      "validate-binary-search-tree",
      "kth-smallest-element-in-a-bst",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "binary-tree-maximum-path-sum",
      "serialize-and-deserialize-binary-tree",
      "kth-largest-element-in-a-stream",
      "last-stone-weight",
      "k-closest-points-to-origin",
      "kth-largest-element-in-an-array",
      "task-scheduler",
      "design-twitter",
      "find-median-from-data-stream",
      "subsets",
      "combination-sum",
      "permutations",
      "subsets-ii",
      "combination-sum-ii",
      "word-search",
      "palindrome-partitioning",
      "letter-combinations-of-a-phone-number",
      "n-queens",
      "implement-trie-prefix-tree",
      "design-add-and-search-words-data-structure",
      "word-search-ii",
      "number-of-islands",
      "max-area-of-island",
      "clone-graph",
      "walls-and-gates",
      "rotting-oranges",
      "pacific-atlantic-water-flow",
      "surrounded-regions",
      "course-schedule",
      "course-schedule-ii",
      "graph-valid-tree",
      "number-of-connected-components-in-an-undirected-graph",
      "redundant-connection",
      "word-ladder",
      "reconstruct-itinerary",
      "min-cost-to-connect-all-points",
      "network-delay-time",
      "swim-in-rising-water",
      "alien-dictionary",
      "cheapest-flights-within-k-stops",
      "climbing-stairs",
      "min-cost-climbing-stairs",
      "house-robber",
      "house-robber-ii",
      "longest-palindromic-substring",
      "palindromic-substrings",
      "decode-ways",
      "coin-change",
      "maximum-product-subarray",
      "word-break",
      "longest-increasing-subsequence",
      "partition-equal-subset-sum",
      "unique-paths",
      "longest-common-subsequence",
      "best-time-to-buy-and-sell-stock-with-cooldown",
      "coin-change-ii",
      "target-sum",
      "interleaving-string",
      "longest-increasing-path-in-a-matrix",
      "distinct-subsequences",
      "edit-distance",
      "burst-balloons",
      "regular-expression-matching",
      "maximum-subarray",
      "jump-game",
      "jump-game-ii",
      "gas-station",
      "hand-of-straights",
      "merge-triplets-to-form-target-triplet",
      "partition-labels",
      "valid-parenthesis-string",
      "insert-interval",
      "merge-intervals",
      "non-overlapping-intervals",
      "meeting-rooms",
      "meeting-rooms-ii",
      "minimum-interval-to-include-each-query",
      "rotate-image",
      "spiral-matrix",
      "set-matrix-zeroes",
      "happy-number",
      "plus-one",
      "powx-n",
      "multiply-strings",
      "detect-squares",
      "single-number",
      "number-of-1-bits",
      "counting-bits",
      "reverse-bits",
      "missing-number",
      "sum-of-two-integers",
      "reverse-integer",
    ],
    "blind75": [
      "contains-duplicate",
      "valid-anagram",
      "two-sum",
      "group-anagrams",
      "top-k-frequent-elements",
      "encode-and-decode-strings",
      "product-of-array-except-self",
      "longest-consecutive-sequence",
      "valid-palindrome",
      "3sum",
      "container-with-most-water",
      "best-time-to-buy-and-sell-stock",
      "longest-substring-without-repeating-characters",
      "longest-repeating-character-replacement",
      "minimum-window-substring",
      "valid-parentheses",
      "find-minimum-in-rotated-sorted-array",
      "search-in-rotated-sorted-array",
      "reverse-linked-list",
      "merge-two-sorted-lists",
      "reorder-list",
      "remove-nth-node-from-end-of-list",
      "linked-list-cycle",
      "merge-k-sorted-lists",
      "invert-binary-tree",
      "maximum-depth-of-binary-tree",
      "same-tree",
      "subtree-of-another-tree",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "binary-tree-level-order-traversal",
      "validate-binary-search-tree",
      "kth-smallest-element-in-a-bst",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "binary-tree-maximum-path-sum",
      "serialize-and-deserialize-binary-tree",
      "find-median-from-data-stream",
      "combination-sum",
      "word-search",
      "implement-trie-prefix-tree",
      "design-add-and-search-words-data-structure",
      "word-search-ii",
      "number-of-islands",
      "clone-graph",
      "pacific-atlantic-water-flow",
      "course-schedule",
      "graph-valid-tree",
      "number-of-connected-components-in-an-undirected-graph",
      "alien-dictionary",
      "climbing-stairs",
      "house-robber",
      "house-robber-ii",
      "longest-palindromic-substring",
      "palindromic-substrings",
      "decode-ways",
      "coin-change",
      "maximum-product-subarray",
      "word-break",
      "longest-increasing-subsequence",
      "unique-paths",
      "longest-common-subsequence",
      "maximum-subarray",
      "jump-game",
      "insert-interval",
      "merge-intervals",
      "non-overlapping-intervals",
      "meeting-rooms",
      "meeting-rooms-ii",
      "rotate-image",
      "spiral-matrix",
      "set-matrix-zeroes",
      "number-of-1-bits",
      "counting-bits",
      "reverse-bits",
      "missing-number",
      "sum-of-two-integers",
    ],
    "striverSDESheet": [
      "set-matrix-zeroes",
      "pascals-triangle",
      "next-permutation",
      "maximum-subarray",
      "sort-colors",
      "best-time-to-buy-and-sell-stock",
      "rotate-image",
      "merge-intervals",
      "merge-sorted-array",
      "find-the-duplicate-number",
      "search-a-2d-matrix",
      "powx-n",
      "majority-element",
      "majority-element-ii",
      "unique-paths",
      "reverse-pairs",
      "two-sum",
      "4sum",
      "longest-consecutive-sequence",
      "longest-substring-without-repeating-characters",
      "reverse-linked-list",
      "middle-of-the-linked-list",
      "merge-two-sorted-lists",
      "remove-nth-node-from-end-of-list",
      "add-two-numbers",
      "delete-node-in-a-linked-list",
      "intersection-of-two-linked-lists",
      "linked-list-cycle",
      "reverse-nodes-in-k-group",
      "palindrome-linked-list",
      "linked-list-cycle-ii",
      "rotate-list",
      "copy-list-with-random-pointer",
      "3sum",
      "trapping-rain-water",
      "remove-duplicates-from-sorted-array",
      "max-consecutive-ones",
      "assign-cookies",
      "subsets-ii",
      "combination-sum",
      "combination-sum-ii",
      "palindrome-partitioning",
      "permutation-sequence",
      "permutations",
      "n-queens",
      "sudoku-solver",
      "single-element-in-a-sorted-array",
      "search-in-rotated-sorted-array",
      "median-of-two-sorted-arrays",
      "kth-largest-element-in-an-array",
      "find-median-from-data-stream",
      "top-k-frequent-elements",
      "implement-stack-using-queues",
      "implement-queue-using-stacks",
      "valid-parentheses",
      "next-greater-element-i",
      "lru-cache",
      "lfu-cache",
      "largest-rectangle-in-histogram",
      "sliding-window-maximum",
      "min-stack",
      "rotting-oranges",
      "online-stock-span",
      "reverse-words-in-a-string",
      "longest-palindromic-substring",
      "roman-to-integer",
      "string-to-integer-atoi",
      "longest-common-prefix",
      "repeated-string-match",
      "implement-strstr",
      "implement-strstr",
      "valid-anagram",
      "count-and-say",
      "compare-version-numbers",
      "binary-tree-inorder-traversal",
      "binary-tree-preorder-traversal",
      "binary-tree-postorder-traversal",
      "binary-tree-inorder-traversal",
      "vertical-order-traversal-of-a-binary-tree",
      "maximum-width-of-binary-tree",
      "binary-tree-level-order-traversal",
      "maximum-depth-of-binary-tree",
      "diameter-of-binary-tree",
      "balanced-binary-tree",
      "lowest-common-ancestor-of-a-binary-tree",
      "same-tree",
      "binary-tree-zigzag-level-order-traversal",
      "boundary-of-binary-tree",
      "binary-tree-maximum-path-sum",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "construct-binary-tree-from-inorder-and-postorder-traversal",
      "symmetric-tree",
      "flatten-binary-tree-to-linked-list",
      "populating-next-right-pointers-in-each-node",
      "search-in-a-binary-search-tree",
      "convert-sorted-array-to-binary-search-tree",
      "construct-binary-search-tree-from-preorder-traversal",
      "validate-binary-search-tree",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "kth-smallest-element-in-a-bst",
      "two-sum-iv-input-is-a-bst",
      "binary-search-tree-iterator",
      "maximum-sum-bst-in-binary-tree",
      "serialize-and-deserialize-binary-tree",
      "flatten-binary-tree-to-linked-list",
      "find-median-from-data-stream",
      "kth-largest-element-in-a-stream",
      "kth-largest-element-in-an-array",
      "flood-fill",
      "clone-graph",
      "course-schedule",
      "course-schedule",
      "course-schedule",
      "course-schedule",
      "number-of-islands",
      "is-graph-bipartite",
      "is-graph-bipartite",
      "maximum-number-of-non-overlapping-substrings",
      "maximum-product-subarray",
      "longest-increasing-subsequence",
      "longest-common-subsequence",
      "edit-distance",
      "minimum-path-sum",
      "coin-change",
      "partition-equal-subset-sum",
      "minimum-cost-to-cut-a-stick",
      "word-break",
      "implement-trie-prefix-tree",
      "maximum-xor-of-two-numbers-in-an-array",
      "maximum-xor-with-an-element-from-array",
    ],
    "striverAtoZ": [
      "reverse-integer",
      "palindrome-number",
      "armstrong-number",
      "valid-palindrome",
      "fibonacci-number",
      "frequency-of-the-most-frequent-element",
      "check-if-array-is-sorted-and-rotated",
      "remove-duplicates-from-sorted-array",
      "rotate-array",
      "rotate-array",
      "move-zeroes",
      "missing-number",
      "max-consecutive-ones",
      "single-number",
      "two-sum",
      "sort-colors",
      "majority-element",
      "maximum-subarray",
      "best-time-to-buy-and-sell-stock",
      "rearrange-array-elements-by-sign",
      "next-permutation",
      "longest-consecutive-sequence",
      "set-matrix-zeroes",
      "rotate-image",
      "spiral-matrix",
      "subarray-sum-equals-k",
      "pascals-triangle",
      "majority-element-ii",
      "3sum",
      "4sum",
      "merge-intervals",
      "merge-sorted-array",
      "reverse-pairs",
      "maximum-product-subarray",
      "binary-search",
      "search-insert-position",
      "find-first-and-last-position-of-element-in-sorted-array",
      "search-in-rotated-sorted-array",
      "search-in-rotated-sorted-array-ii",
      "find-minimum-in-rotated-sorted-array",
      "single-element-in-a-sorted-array",
      "find-peak-element",
      "koko-eating-bananas",
      "minimum-number-of-days-to-make-m-bouquets",
      "find-the-smallest-divisor-given-a-threshold",
      "capacity-to-ship-packages-within-d-days",
      "kth-missing-positive-number",
      "split-array-largest-sum",
      "minimize-max-distance-to-gas-station",
      "median-of-two-sorted-arrays",
      "search-a-2d-matrix",
      "search-a-2d-matrix-ii",
      "find-a-peak-element-ii",
      "remove-outermost-parentheses",
      "reverse-words-in-a-string",
      "largest-odd-number-in-string",
      "longest-common-prefix",
      "isomorphic-strings",
      "rotate-string",
      "valid-anagram",
      "sort-characters-by-frequency",
      "maximum-nesting-depth-of-the-parentheses",
      "roman-to-integer",
      "string-to-integer-atoi",
      "longest-palindromic-substring",
      "sum-of-beauty-of-all-substrings",
      "reverse-words-in-a-string",
      "delete-node-in-a-linked-list",
      "middle-of-the-linked-list",
      "reverse-linked-list",
      "reverse-linked-list",
      "linked-list-cycle",
      "linked-list-cycle-ii",
      "palindrome-linked-list",
      "odd-even-linked-list",
      "remove-nth-node-from-end-of-list",
      "delete-the-middle-node-of-a-linked-list",
      "sort-list",
      "intersection-of-two-linked-lists",
      "add-two-numbers",
      "reverse-nodes-in-k-group",
      "rotate-list",
      "copy-list-with-random-pointer",
      "string-to-integer-atoi",
      "powx-n",
      "count-good-numbers",
      "generate-parentheses",
      "subsets",
      "combination-sum",
      "combination-sum-ii",
      "subsets-ii",
      "combination-sum-iii",
      "letter-combinations-of-a-phone-number",
      "palindrome-partitioning",
      "word-search",
      "n-queens",
      "word-break",
      "sudoku-solver",
      "expression-add-operators",
      "power-of-two",
      "divide-two-integers",
      "minimum-bit-flips-to-convert-number",
      "single-number",
      "subsets",
      "count-primes",
      "powx-n",
      "implement-stack-using-queues",
      "implement-queue-using-stacks",
      "valid-parentheses",
      "min-stack",
      "next-greater-element-i",
      "next-greater-element-ii",
      "trapping-rain-water",
      "sum-of-subarray-minimums",
      "asteroid-collision",
      "sum-of-subarray-ranges",
      "remove-k-digits",
      "largest-rectangle-in-histogram",
      "maximal-rectangle",
      "sliding-window-maximum",
      "online-stock-span",
      "lru-cache",
      "lfu-cache",
      "longest-substring-without-repeating-characters",
      "max-consecutive-ones-iii",
      "longest-repeating-character-replacement",
      "binary-subarrays-with-sum",
      "count-number-of-nice-subarrays",
      "number-of-substrings-containing-all-three-characters",
      "maximum-points-you-can-obtain-from-cards",
      "longest-substring-with-at-most-k-distinct-characters",
      "subarrays-with-k-different-integers",
      "minimum-window-substring",
      "minimum-window-subsequence",
      "kth-largest-element-in-an-array",
      "merge-k-sorted-lists",
      "task-scheduler",
      "hand-of-straights",
      "design-twitter",
      "kth-largest-element-in-a-stream",
      "find-median-from-data-stream",
      "top-k-frequent-elements",
      "assign-cookies",
      "lemonade-change",
      "valid-parenthesis-string",
      "jump-game",
      "jump-game-ii",
      "candy",
      "insert-interval",
      "merge-intervals",
      "non-overlapping-intervals",
      "binary-tree-preorder-traversal",
      "binary-tree-inorder-traversal",
      "binary-tree-postorder-traversal",
      "binary-tree-level-order-traversal",
      "binary-tree-preorder-traversal",
      "binary-tree-inorder-traversal",
      "binary-tree-postorder-traversal",
      "binary-tree-postorder-traversal",
      "maximum-depth-of-binary-tree",
      "balanced-binary-tree",
      "diameter-of-binary-tree",
      "binary-tree-maximum-path-sum",
      "same-tree",
      "binary-tree-zigzag-level-order-traversal",
      "boundary-of-binary-tree",
      "vertical-order-traversal-of-a-binary-tree",
      "binary-tree-right-side-view",
      "symmetric-tree",
      "lowest-common-ancestor-of-a-binary-tree",
      "maximum-width-of-binary-tree",
      "all-nodes-distance-k-in-binary-tree",
      "count-complete-tree-nodes",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "construct-binary-tree-from-inorder-and-postorder-traversal",
      "serialize-and-deserialize-binary-tree",
      "binary-tree-inorder-traversal",
      "binary-tree-inorder-traversal",
      "flatten-binary-tree-to-linked-list",
      "search-in-a-binary-search-tree",
      "insert-into-a-binary-search-tree",
      "delete-node-in-a-bst",
      "kth-smallest-element-in-a-bst",
      "validate-binary-search-tree",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "construct-binary-search-tree-from-preorder-traversal",
      "inorder-successor-in-bst",
      "binary-search-tree-iterator",
      "two-sum-iv-input-is-a-bst",
      "recover-binary-search-tree",
      "number-of-connected-components-in-an-undirected-graph",
      "number-of-provinces",
      "rotting-oranges",
      "flood-fill",
      "01-matrix",
      "surrounded-regions",
      "number-of-enclaves",
      "word-ladder",
      "word-ladder-ii",
      "number-of-distinct-islands-ii",
      "is-graph-bipartite",
      "course-schedule-ii",
      "course-schedule",
      "course-schedule-ii",
      "find-eventual-safe-states",
      "alien-dictionary",
      "shortest-path-in-binary-matrix",
      "path-with-minimum-effort",
      "cheapest-flights-within-k-stops",
      "network-delay-time",
      "number-of-ways-to-arrive-at-destination",
      "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
      "number-of-operations-to-make-network-connected",
      "most-stones-removed-with-same-row-or-column",
      "accounts-merge",
      "number-of-islands-ii",
      "making-a-large-island",
      "swim-in-rising-water",
      "critical-connections-in-a-network",
      "climbing-stairs",
      "house-robber",
      "house-robber-ii",
      "unique-paths",
      "unique-paths-ii",
      "minimum-path-sum",
      "triangle",
      "minimum-falling-path-sum",
      "partition-equal-subset-sum",
      "partition-array-into-two-arrays-to-minimize-sum-difference",
      "assign-cookies",
      "coin-change",
      "target-sum",
      "coin-change-2",
      "longest-common-subsequence",
      "longest-palindromic-subsequence",
      "minimum-insertion-steps-to-make-a-string-palindrome",
      "delete-operation-for-two-strings",
      "shortest-common-supersequence",
      "distinct-subsequences",
      "edit-distance",
      "wildcard-matching",
      "best-time-to-buy-and-sell-stock",
      "best-time-to-buy-and-sell-stock-ii",
      "best-time-to-buy-and-sell-stock-iii",
      "best-time-to-buy-and-sell-stock-iv",
      "best-time-to-buy-and-sell-stock-with-cooldown",
      "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "longest-increasing-subsequence",
      "largest-divisible-subset",
      "longest-string-chain",
      "number-of-longest-increasing-subsequence",
      "minimum-cost-to-cut-a-stick",
      "burst-balloons",
      "parsing-a-boolean-expression",
      "palindrome-partitioning-ii",
      "partition-array-for-maximum-sum",
      "maximal-rectangle",
      "count-square-submatrices-with-all-ones",
      "implement-trie-prefix-tree",
      "maximum-xor-of-two-numbers-in-an-array",
      "maximum-xor-with-an-element-from-array",
      "minimum-add-to-make-parentheses-valid",
      "count-and-say",
      "repeated-string-match",
      "implement-strstr",
      "implement-strstr",
      "shortest-palindrome",
      "longest-happy-prefix",
    ],
    "striver79": [
      "next-permutation",
      "3sum",
      "maximum-subarray",
      "majority-element-ii",
      "maximum-product-subarray",
      "search-in-rotated-sorted-array-ii",
      "find-minimum-in-rotated-sorted-array",
      "find-peak-element",
      "koko-eating-bananas",
      "median-of-two-sorted-arrays",
      "minimize-max-distance-to-gas-station",
      "middle-of-the-linked-list",
      "linked-list-cycle",
      "remove-nth-node-from-end-of-list",
      "intersection-of-two-linked-lists",
      "sort-list",
      "odd-even-linked-list",
      "subsets",
      "combination-sum",
      "n-queens",
      "sudoku-solver",
      "word-search",
      "next-greater-element-i",
      "trapping-rain-water",
      "largest-rectangle-in-histogram",
      "asteroid-collision",
      "sliding-window-maximum",
      "lru-cache",
      "kth-largest-element-in-an-array",
      "task-scheduler",
      "diameter-of-binary-tree",
      "binary-tree-maximum-path-sum",
      "lowest-common-ancestor-of-a-binary-tree",
      "construct-binary-tree-from-preorder-and-inorder-traversal",
      "binary-tree-inorder-traversal",
      "delete-node-in-a-bst",
      "lowest-common-ancestor-of-a-binary-search-tree",
      "two-sum-iv-input-is-a-bst",
      "rotting-oranges",
      "word-ladder",
      "number-of-distinct-islands-ii",
      "course-schedule-ii",
      "alien-dictionary",
      "cheapest-flights-within-k-stops",
      "accounts-merge",
      "critical-connections-in-a-network",
      "house-robber",
      "minimum-path-sum",
      "assign-cookies",
      "longest-common-subsequence",
      "longest-palindromic-subsequence",
      "edit-distance",
      "best-time-to-buy-and-sell-stock-iv",
      "longest-increasing-subsequence",
      "burst-balloons",
      "maximum-xor-with-an-element-from-array",
      "minimum-add-to-make-parentheses-valid",
      "repeated-string-match",
      "find-the-index-of-the-first-occurrence-in-a-string"
    ],
  };

  